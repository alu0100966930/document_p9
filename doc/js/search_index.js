var search_data = {"index":{"searchIndex":["alimentos","ambiental","lista","object","p6","error","plato","<=>()","<=>()","each()","ef_energetica()","get_vct()","get_alimento()","get_alimentos()","get_carbohidrato()","get_gas()","get_gases()","get_gramos()","get_lipido()","get_proteina()","get_terreno()","get_terreno()","huella_carbono()","huella_nutricional()","incrementar_precio()","indice_energia()","insert_alimento()","insert_gramos()","new()","new()","new()","pop_head()","pop_tail()","por_carbohidratos()","por_lipidos()","por_proteinas()","push()","to_s()","to_s()","to_s()","val_energetico()","code_of_conduct","gemfile","gemfile.lock","guardfile","license","readme","rakefile","setup","p6.gemspec"],"longSearchIndex":["alimentos","ambiental","lista","object","p6","p6::error","plato","alimentos#<=>()","ambiental#<=>()","lista#each()","alimentos#ef_energetica()","plato#get_vct()","alimentos#get_alimento()","plato#get_alimentos()","alimentos#get_carbohidrato()","ambiental#get_gas()","alimentos#get_gases()","plato#get_gramos()","alimentos#get_lipido()","alimentos#get_proteina()","alimentos#get_terreno()","ambiental#get_terreno()","ambiental#huella_carbono()","ambiental#huella_nutricional()","ambiental#incrementar_precio()","ambiental#indice_energia()","plato#insert_alimento()","plato#insert_gramos()","alimentos::new()","lista::new()","plato::new()","lista#pop_head()","lista#pop_tail()","plato#por_carbohidratos()","plato#por_lipidos()","plato#por_proteinas()","lista#push()","alimentos#to_s()","ambiental#to_s()","plato#to_s()","alimentos#val_energetico()","","","","","","","","",""],"info":[["Alimentos","","Alimentos.html","","<p>CLASE ALIMENTOS\n"],["Ambiental","","Ambiental.html","","<p>CLASE AMBIENTAL HEREDADA DE PLATO\n"],["Lista","","Lista.html","","<p>CLaSE LISTA\n"],["Object","","Object.html","",""],["P6","","P6.html","",""],["P6::Error","","P6/Error.html","",""],["Plato","","Plato.html","","<p>CLASE PLATP\n"],["<=>","Alimentos","Alimentos.html#method-i-3C-3D-3E","(toCompare)","<p>Compara el nombre de un alimento con el de otro que le hayas pasado\n"],["<=>","Ambiental","Ambiental.html#method-i-3C-3D-3E","(compara)","<p>Compara la huella nutricional de dos menus\n"],["each","Lista","Lista.html#method-i-each","()","<p>Método para iterar la lista\n"],["ef_energetica","Alimentos","Alimentos.html#method-i-ef_energetica","()","<p>Devuelve la eficiencia energética\n"],["get_VCT","Plato","Plato.html#method-i-get_VCT","()","<p>Devuelve el valor calórico total\n"],["get_alimento","Alimentos","Alimentos.html#method-i-get_alimento","()","<p>Devuelve el nombre del alimento\n"],["get_alimentos","Plato","Plato.html#method-i-get_alimentos","()","<p>Devuelve la lista de alimentos\n"],["get_carbohidrato","Alimentos","Alimentos.html#method-i-get_carbohidrato","()","<p>Devuelve los carbohidratos\n"],["get_gas","Ambiental","Ambiental.html#method-i-get_gas","()","<p>Devuelve la cantidad de CO2 de cada plato de cada menú\n"],["get_gases","Alimentos","Alimentos.html#method-i-get_gases","()","<p>Devuelve la cantidad de CO2\n"],["get_gramos","Plato","Plato.html#method-i-get_gramos","()","<p>Devuelve la lista de gramos de cada alimento\n"],["get_lipido","Alimentos","Alimentos.html#method-i-get_lipido","()","<p>Devuelve los lípidos\n"],["get_proteina","Alimentos","Alimentos.html#method-i-get_proteina","()","<p>Devuelve las proteínas\n"],["get_terreno","Alimentos","Alimentos.html#method-i-get_terreno","()","<p>Devuelve la cantidad de M2 de terreno\n"],["get_terreno","Ambiental","Ambiental.html#method-i-get_terreno","()","<p>Devuelve la cantidad de M2 de cada plato de un menú\n"],["huella_carbono","Ambiental","Ambiental.html#method-i-huella_carbono","()","<p>Devuelve el índice de huella de carbono\n"],["huella_nutricional","Ambiental","Ambiental.html#method-i-huella_nutricional","()","<p>Devuelve la huella nutricional\n"],["incrementar_precio","Ambiental","Ambiental.html#method-i-incrementar_precio","(v)","<p>Método para incrementar el precio de un plato según su huella nutricional\n"],["indice_energia","Ambiental","Ambiental.html#method-i-indice_energia","()","<p>Devuelve el índice de energía\n"],["insert_alimento","Plato","Plato.html#method-i-insert_alimento","(alimento)","<p>Inserta un alimento al plato\n"],["insert_gramos","Plato","Plato.html#method-i-insert_gramos","(gramos)","<p>Inserta los gramos de un alimento a un plato\n"],["new","Alimentos","Alimentos.html#method-c-new","(alim, prot, carbo, lipi, gases, terre)","<p>Función para incializar todas las variables de la clase\n"],["new","Lista","Lista.html#method-c-new","()","<p>Inicializamos el nodo head, tail y el tamaño a 0\n"],["new","Plato","Plato.html#method-c-new","(name)","<p>Inicializa tanto la lista de alimentos como de gramos de cada para cada plato\n"],["pop_head","Lista","Lista.html#method-i-pop_head","()","<p>Extrae un nodo por la cabecera de la lista\n"],["pop_tail","Lista","Lista.html#method-i-pop_tail","()","<p>Extrae un nodo por la cola de la lista\n"],["por_carbohidratos","Plato","Plato.html#method-i-por_carbohidratos","()","<p>Devuelve el porcentaje de carbohidratos\n"],["por_lipidos","Plato","Plato.html#method-i-por_lipidos","()","<p>Devuelve el porcentaje de lípidos\n"],["por_proteinas","Plato","Plato.html#method-i-por_proteinas","()","<p>Devuelve el porcentaje de proteínas\n"],["push","Lista","Lista.html#method-i-push","(valor)","<p>Inserta un nodo en la lista\n"],["to_s","Alimentos","Alimentos.html#method-i-to_s","()","<p>Devuelve una cadena con el nombre del alimento y la cantidad de cada componente que lo forma\n"],["to_s","Ambiental","Ambiental.html#method-i-to_s","()","<p>Formatea la saluda de los gases (CO2) y el terreno (M2) utilizado para cada plato\n"],["to_s","Plato","Plato.html#method-i-to_s","()","<p>Devuelve la lista de alimentos de cada plato\n"],["val_energetico","Alimentos","Alimentos.html#method-i-val_energetico","()","<p>Devuelve el valor energético\n"],["CODE_OF_CONDUCT","","CODE_OF_CONDUCT_md.html","","<p>Contributor Covenant Code of Conduct\n<p>Our Pledge\n<p>In the interest of fostering an open and welcoming environment, …\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org” gem &#39;rspec&#39; # Specify your gem&#39;s dependencies in p6.gemspec …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  p6 (0.1.0)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>## Uncomment and set this to only include …\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2019 Karmele Bencomo\n<p>Permission is hereby granted, free of charge, …\n"],["README","","README_md.html","","<p>P6\n<p>LENGUAJES Y PARADIGMAS DE LA PROGRAMACIÓN\nPRÁCTICA 6: TDD\nKARMELE BENCOMO MARTIN\n<p>Welcome to your new …\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["p6.gemspec","","p6_gemspec.html","","<p>lib = File.expand_path(“lib”, __dir__) $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib) …\n"]]}}